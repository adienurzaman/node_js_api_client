<br>
<p>
	<a class="btn btn-info btn-md" data-toggle="modal" data-target="#modal_tambah">
		<i class="glyphicon glyphicon-plus"></i> Tambah Data
	</a>
</p>
<table id="tabel_user" class="table table-bordered table-striped table-hover nowrap" width="100%">
	<thead>
		<tr>
			<th>UserID</th>
			<th>ID</th>
			<th>Title</th>
			<th>Body</th>
			<th>Action</th>
		</tr>
	</thead>
	<tbody>

	</tbody>
</table>

<div class="modal fade" id="modal_tambah">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title">Tambah Data</h4>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<form id="form_tambah">
				<div class="modal-body">
					<div>
						<label class="label-control">User ID</label>
						<input type="number" class="form-control" name="userId" id="userId" required>
					</div>
					<div>
						<label class="label-control">Title</label>
						<input type="text" class="form-control" name="title" id="title" required>
					</div>
					<div>
						<label class="label-control">Body</label>
						<textarea class="form-control" name="body" id="body" required></textarea>
					</div>
				</div>
				<div class="modal-footer justify-content-between">
					<button type="submit" class="btn btn-primary">Simpan</button>
					<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				</div>
			</form>
		</div>
		<!-- /.modal-content -->
	</div>
	<!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<div class="modal fade" id="modal_edit">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h4 class="modal-title">Edit Data</h4>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<form id="form_edit">
				<div class="modal-body">
					<div>
						<label class="label-control">User ID</label>
						<input type="number" class="form-control" name="userId" readonly>
					</div>
					<div>
						<label class="label-control">ID</label>
						<input type="number" class="form-control" name="id" readonly>
					</div>
					<div>
						<label class="label-control">Title</label>
						<input type="text" class="form-control" name="title" required>
					</div>
					<div>
						<label class="label-control">Body</label>
						<textarea class="form-control" name="body" required></textarea>
					</div>
				</div>
				<div class="modal-footer justify-content-between">
					<button type="submit" class="btn btn-primary">Simpan Perubahan</button>
					<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				</div>
			</form>
		</div>
		<!-- /.modal-content -->
	</div>
	<!-- /.modal-dialog -->
</div>
<!-- /.modal -->

<script type="text/javascript">
	let form_tambah;
	let form_edit;
	let modal_tambah;
	let modal_edit;
	let tabel;
	$(function () {
		form_tambah = $("#form_tambah");
		form_edit = $("#form_edit");
		modal_tambah = $("#modal_tambah");
		modal_edit = $("#modal_edit");

		tabel = $("#tabel_user").DataTable({
			responsive: true,
			processing: true,
			ajax: {
				url: "https://jsonplaceholder.typicode.com/posts",
				dataSrc: ""
			},
			columns: [{
				data: "userId"
			},
			{
				data: "id"
			},
			{
				data: "title"
			},
			{
				data: "body"
			},
			{
				render: (data, type, row) => {
					return '<button class="btn btn-success" onclick=edit("' + row.id + '")>Edit Data</button> <button class="btn btn-danger" onclick=hapus("' + row.id + '")>Hapus Data</button>';
				}
			}
			]
		});

		//reset data ketika hide modal
		$(".modal").on("hide.bs.modal", () => {
			form_tambah[0].reset();
			form_tambah[0].reset();
		});

		//submit data baru
		form_tambah.on("submit", (event) => {
			event.preventDefault();
			let url = "https://jsonplaceholder.typicode.com/posts";
			let config = {
				method: "POST",
				body: JSON.stringify({
					title: form_tambah.find("[name='title']").val(),
					body: form_tambah.find("[name='body']").val(),
					userId: form_tambah.find("[name='userId']").val(),
				})
			}

			simpan('tambah', url, config);
		});

		//submit data edit
		form_edit.on("submit", (event) => {
			event.preventDefault();
			let id = form_edit.find("[name='id']").val();
			let url = "https://jsonplaceholder.typicode.com/posts/" + id;
			let config = {
				method: "PUT",
				body: JSON.stringify({
					id: form_edit.find("[name='id']").val(),
					title: form_edit.find("[name='title']").val(),
					body: form_edit.find("[name='body']").val(),
					userId: form_edit.find("[name='userId']").val(),
				})
			}

			simpan('update', url, config);
		});
	});

	const simpan = (segment, url, config) => {
		fetch(url, config)
			.then((response) => {
				if (response.ok) {
					return response.json();
				} else {
					return Promise.reject({
						status: response.status,
						statusText: response.statusText
					})
				}
			}).then((output) => {
				//response json
				console.log(output);
				if (segment == "tambah") {
					modal_tambah.modal('hide');
				} else {
					modal_edit.modal('hide');
				}
				tabel.ajax.reload(false, null)
			}).catch((error) => {
				console.error(error);
			})
	}

	const edit = (id) => {
		let url = "https://jsonplaceholder.typicode.com/posts/" + id;
		let config = {
			method: "GET",
		}
		fetch(url, config)
			.then((response) => {
				if (response.ok) {
					return response.json();
				} else {
					return Promise.reject({
						status: response.status,
						statusText: response.statusText
					})
				}
			}).then((output) => {
				//response json
				form_edit.find("[name='userId']").val(output.userId);
				form_edit.find("[name='id']").val(output.id);
				form_edit.find("[name='title']").val(output.title);
				form_edit.find("[name='body']").html(output.body);

				modal_edit.modal({
					show: true,
					backdrop: 'static'
				});
			}).catch((error) => {
				console.error(error);
			})
	}

	const hapus = (id) => {
		let url = "https://jsonplaceholder.typicode.com/posts/" + id;
		let config = {
			method: "DELETE",
		}
		fetch(url, config)
			.then((response) => {
				if (response.ok) {
					return response.text();
				} else {
					return Promise.reject({
						status: response.status,
						statusText: response.statusText
					})
				}
			}).then((output) => {
				alert('Hapus Sukses');
				tabel.ajax.reload(false, null);
			}).catch((error) => {
				console.error(error);
			})
	}
</script>